Stop Sequences Test Results - Both APIs (Comparison)
Test Date: 2025-09-30T22:37:59.854Z
================================================================================

This test validates that stop sequences work correctly across all models.
Each model is tested with multiple stop sequence scenarios.

Starting stop sequences tests with 34 models using Both APIs (Comparison)...
Testing 5 different stop sequence scenarios


Testing 11 representative models...


============================================================
Testing Claude-4-1-Opus
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "You've already listed them correctly! The days of the week in order are:

1. Monday
2. Tuesday
3. We..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "You've already listed them correctly! The days of the week in order are:

1. Monday
2. Tuesday
3. We..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "You've already listed them correctly! The days of the week in order are:

1. Monday
2. Tuesday
3. We..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "You've already listed them correctly! The days of the week in order are:

1. Monday
2. Tuesday
3. We..."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "You've already written the alphabet perfectly!..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "You've already written the alphabet perfectly!..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "You've already written the alphabet perfectly!..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "You've already written the alphabet perfectly!..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "As the knight ventured deeper, the..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "As the knight ventured deeper, the..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "As the knight ventured deeper, the..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "As the knight ventured deeper, the..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here's a list with bullet points:

â€¢ First item
â€¢ Second item..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here's a list with bullet points:

â€¢ First item
â€¢ Second item..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here's a list with bullet points:

â€¢ First item
â€¢ Second item..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here's a list with bullet points:

â€¢ First item
â€¢ Second item..."

============================================================
Testing Claude-3-5-Sonnet-v2
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here's the completed story:

Once upon a time, there was a brave knight who loved to explore. One da..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here's the completed story:

Once upon a time, there was a brave knight who loved to explore. One da..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here's the completed story:

Once upon a time, there was a brave knight who loved to explore. One da..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here's the list with bullet points:
â€¢ First item
â€¢ Second item..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here's the list with bullet points:
â€¢ First item
â€¢ Second item..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here's the list with bullet points:
â€¢ First item
â€¢ Second item..."

============================================================
Testing Claude-3-Haiku
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

Monday
Tuesday
Wednesday
Thursday..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

Monday
Tuesday
Wednesday
Thursday..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

Monday
Tuesday
Wednesday
Thursday..."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "A, B, C, D, E, F,..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "A, B, C, D, E, F,..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "A, B, C, D, E, F,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "A, B, C, D, E, F,..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here is a list with bullet points:

â€¢ First item
â€¢ Second item..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here is a list with bullet points:

â€¢ First item
â€¢ Second item..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here is a list with bullet points:

â€¢ First item
â€¢ Second item..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here is a list with bullet points:

â€¢ First item
â€¢ Second item..."

============================================================
Testing Nova-Pro
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6, 7..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6, 7..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! Here are the numbers from 1 to 10, separated by commas:

1, 2, 3, 4, 5, 6, 7..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! Here are the numbers from 1 to 10, separated by commas:

1, 2, 3, 4, 5, 6, 7..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Certainly! Here are the days of the week listed in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thur..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Certainly! Here are the days of the week listed in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thur..."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "1. **List the alphabet in order** - The English alphabet consists of 26 letters, starting from A and..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "1. **I..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! H..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! H..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: ". As he ventured further, the air grew colder and the walls shimmered with an eerie, otherworldly gl..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: ". As he ventured further, the air grew colder and the walls shimmered with an eerie, phosphorescent ..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "Once upon a time, there was a brave knight named Sir Alaric who loved to explore. One day, while tra..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Once upon a time, there was a brave knight named Sir Alaric who loved to explore. One day, while rid..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "1. First item
2. Second item
3. Third item
4. Fourth item
5. Fifth item

Here's the list in markdown..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "1. First item
2. Second item
3. Third item
4. Fourth item
5. Fifth item

Here's the list in markdown..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "Sure, here's the list with bullet points:

- First item
- Second item
- Third item
- Fourth item
- F..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Sure, here's the list with bullet points:

- First item
- Second item
- Third item
- Fourth item
- F..."

============================================================
Testing Nova-Lite
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6, 7..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6, 7..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! Here is the sequence from 1 to 10, separated by commas:

1, 2, 3, 4, 5, 6, 7..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Certainly! Here is the sequence from 1 to 10, separated by commas:

1, 2, 3, 4, 5, 6, 7..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here are the days of the week listed in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here are the days of the week listed in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
..."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here is the alphabet in order:

A, B, C, D, E, F, G..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here is the alphabet in order:

A, B, C, D, E, F, G..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here is the alphabet in order:

A, B, C, D, E, F, G..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Sure, here is the alphabet in order:

A, B, C, D, E, F, G..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Once upon a time, there was a brave knight who loved to explore. One day, he found a mysterious cave..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
â€¢ Third..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
â€¢ Third..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
â€¢ Third..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
â€¢ Third..."

============================================================
Testing GPT-OSS-120B
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

============================================================
Testing GPT-OSS-120B-Thinking
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

============================================================
Testing GPT-OSS-20B
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

============================================================
Testing GPT-OSS-20B-Thinking
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 221

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 249

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 247

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 384

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268
    âœ— Invoke Non-streaming: ERROR - Failed to deserialize the JSON body into the target type: unknown variant `stop_sequences`, expected one of `audio`, `frequency_penalty`, `function_call`, `functions`, `logit_bias`, `logprobs`, `max_completion_tokens`, `max_tokens`, `messages`, `metadata`, `modalities`, `model`, `n`, `parallel_tool_calls`, `prediction`, `presence_penalty`, `prompt_cache_key`, `reasoning_effort`, `response_format`, `safety_identifier`, `seed`, `service_tier`, `stop`, `store`, `stream`, `stream_options`, `temperature`, `text`, `tool_choice`, `tools`, `top_logprobs`, `top_p`, `user`, `verbosity`, `web_search_options` at line 1 column 268

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.
    âœ— Converse Non-streaming: ERROR - This model doesn't support the stopSequences field. Remove stopSequences and try again.

============================================================
Testing Llama-3-3-70b
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "1, 2, 3, 4, 5, 6, 7, 8, 9, 10..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "1, 2, 3, 4, 5, 6, 7, 8, 9, 10..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "1, 2, 3, 4, 5, 6,..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday
6. ..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Here are the days of the week in order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5. Friday
6. ..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "The days of the week in order are:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5...."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "Here is the alphabet:

A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Here is the alphabet:

A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "The alphabet is: 
A, B, C, D, E, F,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "The alphabet is: 
A, B, C, D, E, F,..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "As he ventured further into the cave, the brave knight encountered all manner of obstacles, from tre..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "As he ventured deeper into the cave, the brave knight encountered all manner of obstacles, from trea..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "As he ventured further into the cave, the brave knight encountered all manner of obstacles, from tre..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "As he ventured further into the cave, the brave knight encountered all manner of obstacles, from tre..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "Here is the list with bullet points:

* First item
* Second item
* Third item
* Fourth item
* Fifth ..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "Here is the list with bullet points:

* First item
* Second item
* Third item
* Fourth item
* Fifth ..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "* First item
* Second item
* Third item
* Fourth item
* Fifth item..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "* First item
* Second item
* Third item
* Fourth item
* Fifth item..."

============================================================
Testing Mistral-7b
============================================================

â–¶ Test Case: Number sequence test
  Prompt: "Count from 1 to 10, separated by commas: 1, 2, 3, ..."
  Stop sequences: [7]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here is the sequence you requested, with each number separated by a comma and a space: 1, 2, 3, 4, 5..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here is the sequence you requested, with each number separated by a comma and a space: 1, 2, 3, 4, 5..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here is the sequence you requested, with each number separated by a comma: 1, 2, 3, 4, 5, 6,..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here is the sequence you requested, with each number separated by a comma: 1, 2, 3, 4, 5, 6,..."

â–¶ Test Case: Word-based stop test
  Prompt: "List the days of the week in order: Monday, Tuesda..."
  Stop sequences: [Friday]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in the order they typically appear:

1. Monday
2. Tuesday
3. Wednesday..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in the order they typically appear:

1. Monday
2. Tuesday
3. Wednesday..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in the correct order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "Here are the days of the week in the correct order:

1. Monday
2. Tuesday
3. Wednesday
4. Thursday
5..."

â–¶ Test Case: Multi-stop sequence test
  Prompt: "Write the alphabet: A, B, C, D, E, F, G, H, I, J, ..."
  Stop sequences: [G, H, I]

  ðŸ“¡ Testing with Invoke API:
    âœ— Invoke Streaming: FAILED - Response did not stop at the expected point
    Response: "..."
    âœ— Invoke Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

  ðŸ“¡ Testing with Converse API:
    âœ— Converse Streaming: FAILED - Response did not stop at the expected point
    Response: "..."
    âœ— Converse Non-streaming: FAILED - Response did not stop at the expected point
    Response: "..."

â–¶ Test Case: Sentence completion test
  Prompt: "Complete this story: Once upon a time, there was a..."
  Stop sequences: [sword]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "The knight's heart raced with excitement as he ventured further into the cave, the magical..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "The knight's heart raced with excitement as he ventured further into the cave, the magical..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "The knight's heart raced with excitement as he took the first few steps deeper into the cave, the ma..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "The knight's heart raced with excitement as he took the first few steps deeper into the cave, the ma..."

â–¶ Test Case: Special character stop test
  Prompt: "Generate a list with bullet points:
â€¢ First item
â€¢..."
  Stop sequences: [â€¢ Third]

  ðŸ“¡ Testing with Invoke API:
    âœ“ Invoke Streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
- Sub-point 1 for second item
- Sub-point 2 for second item..."
    âœ“ Invoke Non-streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
â€¢ Second item
- Sub-point 1 for second item
- Sub-point 2 for second item..."

  ðŸ“¡ Testing with Converse API:
    âœ“ Converse Streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
  - Sub-point 1.1
  - Sub-point 1.2
â€¢ Second item
  - Sub-point 2.1
  - Sub-point 2.2..."
    âœ“ Converse Non-streaming: PASSED - Response stopped at the correct point
    Response: "â€¢ First item
  - Sub-point 1.1
  - Sub-point 1.2
â€¢ Second item
  - Sub-point 2.1
  - Sub-point 2.2..."


================================================================================
SUMMARY
================================================================================

Claude-4-1-Opus:
  Invoke API:
    Streaming:     3/5 passed (60.0%)
    Non-streaming: 3/5 passed (60.0%)
  Converse API:
    Streaming:     3/5 passed (60.0%)
    Non-streaming: 3/5 passed (60.0%)
Claude-3-5-Sonnet-v2:
  Invoke API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 2/5 passed (40.0%)
  Converse API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 4/5 passed (80.0%)
Claude-3-Haiku:
  Invoke API:
    Streaming:     5/5 passed (100.0%)
    Non-streaming: 5/5 passed (100.0%)
  Converse API:
    Streaming:     5/5 passed (100.0%)
    Non-streaming: 5/5 passed (100.0%)
Nova-Pro:
  Invoke API:
    Streaming:     2/5 passed (40.0%)
    Non-streaming: 2/5 passed (40.0%)
  Converse API:
    Streaming:     1/5 passed (20.0%)
    Non-streaming: 1/5 passed (20.0%)
Nova-Lite:
  Invoke API:
    Streaming:     5/5 passed (100.0%)
    Non-streaming: 5/5 passed (100.0%)
  Converse API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 4/5 passed (80.0%)
GPT-OSS-120B:
  Invoke API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
  Converse API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
GPT-OSS-120B-Thinking:
  Invoke API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
  Converse API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
GPT-OSS-20B:
  Invoke API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
  Converse API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
GPT-OSS-20B-Thinking:
  Invoke API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
  Converse API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
Llama-3-3-70b:
  Invoke API:
    Streaming:     0/5 passed (0.0%)
    Non-streaming: 0/5 passed (0.0%)
  Converse API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 4/5 passed (80.0%)
Mistral-7b:
  Invoke API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 4/5 passed (80.0%)
  Converse API:
    Streaming:     4/5 passed (80.0%)
    Non-streaming: 4/5 passed (80.0%)
